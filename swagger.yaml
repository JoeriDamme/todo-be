openapi: 3.0.1
info:
  title: ToDo REST API.
  description: Manage ToDo resources.
  contact:
    email: joerid@gmail.com
  license:
    name: MIT License
    url: https://choosealicense.com/licenses/mit/
  version: 1.0.0
servers:
- url: http://localhost:8081
tags:
- name: ToDo
  description: Manage ToDo resources.
- name: Status
  description: Health check endpoint
paths:
  /todos:
    get:
      tags:
      - ToDo
      summary: Query on ToDo resources.
      description: Get a collection of Todo resouces.
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/ToDo'
                  count:
                    type: integer
                  total:
                    type: integer
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: URI
                        example: http://example.org/api/todos?page=3
                      first:
                        type: string
                        format: URI
                        example: http://example.org/api/todos
                      last:
                        type: string
                        format: URI
                        example: http://example.org/api/todos?page=6
                      prev:
                        type: string
                        format: URI
                        example: http://example.org/api/todos?page=2
                      next:
                        type: string
                        format: URI
                        example: http://example.org/api/todos?page=4
    post:
      tags:
        - ToDo
      summary: Create a ToDo resource.
      description: Make a new Todo item.
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToDo'
  /todos/{TodoId}:
    get:
      tags:
      - ToDo
      summary: Find ToDo by Id
      description: Returns a single ToDo Resource
      parameters:
      - name: TodoId
        in: path
        description: ID of ToDo to return.
        required: true
        schema:
          type: integer
          format: UUID
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToDo'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Resource not found
          content: {}
    put:
      tags:
        - ToDo
      summary: Update a ToDo resource.
      description: Update a Todo item by Id.
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToDo'
    patch:
      tags:
        - ToDo
      summary: Patch a ToDo resource.
      description: Patch a single attribute of a Todo item by Id.
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToDo'
    delete:
      tags:
        - ToDo
      summary: Delete a ToDo resource.
      description: Remove a Todo item by Id.
  /status:
    get:
      tags:
      - Status
      summary: Health check endpoint
      responses:
        200:
          description: Success
components:
  schemas:
    ToDo:
      type: object
      properties:
        id:
          type: string
          format: UUID
          example: 033252ca-f940-483e-8171-6beaf869169f
        description:
          type: string
        completed:
          type: boolean
        createdAt: 
          type: string
          format: ISO 8601
        updatedAt: 
          type: string
          format: ISO 8601
        completedAt: 
          type: string
          format: ISO 8601
    ApiErrorResponse:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
        message:
          type: string
